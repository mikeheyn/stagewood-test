[{"C:\\Users\\Mike Heyn\\Desktop\\stagewood-test-app\\client\\src\\index.js":"1","C:\\Users\\Mike Heyn\\Desktop\\stagewood-test-app\\client\\src\\App.js":"2","C:\\Users\\Mike Heyn\\Desktop\\stagewood-test-app\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Mike Heyn\\Desktop\\stagewood-test-app\\client\\src\\Components\\Users\\users.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":3797,"mtime":1608824496836,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1532,"mtime":1608817317215,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"17cdbty",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"C:\\Users\\Mike Heyn\\Desktop\\stagewood-test-app\\client\\src\\index.js",[],["22","23"],"C:\\Users\\Mike Heyn\\Desktop\\stagewood-test-app\\client\\src\\App.js",["24","25","26"],"import logo from './logo.svg';\nimport './App.css';\nimport Users from './Components/Users/users.js';\nimport $ from 'jquery'; \n\nfunction App() {\n  return (\n    <div className=\"bg-dark d-flex flex-column justify-content-between\" style={{\"minHeight\":\"100%\"}}>\n      <div>\n        <div className=\"container py-3 py-xl-4\">\n          <h4 className=\"text-center text-light\">Submit</h4>\n          <div className=\"mx-auto mt-3 col-xl-5 col-md-7 col-sm-10 card text-dark p-0\">\n            <form action=\"/submit\" method=\"post\" id=\"submitForm\" encType=\"multipart/form-data\">\n              <div className=\"card-body\">\n                <div className=\"form-group row\">\n                  <label htmlFor=\"name\" className=\"col-sm-4 col-form-label pr-sm-0\">Full Name:</label>\n                  <div className=\"col-sm-8\">\n                    <input type=\"text\" className=\"form-control bg-light\" id=\"name\" name=\"name\"/>\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label htmlFor=\"email\" className=\"col-sm-4 col-form-label pr-sm-0\">Email:</label>\n                  <div className=\"col-sm-8\">\n                    <input type=\"text\" className=\"form-control bg-light\" id=\"email\" name=\"email\"/>\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n                  <label htmlFor=\"user_name\" className=\"col-sm-4 col-form-label pr-sm-0\">User Name:</label>\n                  <div className=\"col-sm-8\">\n                    <input type=\"text\" className=\"form-control bg-light\" id=\"user_name\"  name=\"user_name\"/>\n                  </div>\n                </div>\n                <div className=\"form-group row\">\n              <label htmlFor=\"password\" className=\"col-sm-4 col-form-label pr-sm-0\">Password:</label>\n              <div className=\"col-sm-8\">\n                <input type=\"password\" className=\"form-control\" id=\"password\"  name=\"password\" onKeyUp={validatePassword}/>\n              </div>\n              </div>\n              <div className=\"form-group row\">\n                <label className=\"col-sm-4 col-form-label pr-sm-0\">Re-type password:</label>\n                <div className=\"col-sm-8\">\n                  <input type=\"password\" className=\"form-control\" id=\"passwordverification\"  name=\"passwordv\" onKeyUp={validatePassword}/>\n                  <p id=\"passwordVerificationMsg\" style={{\"display\": \"none\"}}>Password's do not match up.</p>\n                </div>\n              </div>\n                <div className=\"form-group row\">\n                  <label htmlFor=\"profile_pic\" className=\"col-sm-4 col-form-label pr-sm-0\">Profile Picture:</label>\n                  <div className=\"col-sm-8\">\n                    <input type=\"file\" id=\"profile_pic\" name=\"profile_pic\" accept=\"image/png, image/jpeg\" className=\"form-control bg-light\"></input>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card-footer mt-2\">\n                <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary text-uppercase submit\" id=\"submitButton\"/>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <Users/>\n    </div>\n  );\n}\n\nfunction validatePassword() {\n  var form = $('#signupForm');\n\n  var pass1 = $('#password').val();\n  var pass2 = $('#passwordverification').val();\n  console.log (pass1, pass2);\n  if (pass1 == pass2) {\n      $('#submitButton').prop('disabled', false);\n      $('#passwordVerificationMsg').css('display','none');\n      console.log('submitted');\n  }\n  else\n  {\n      $('#submitButton').prop('disabled', true);\n      var vMsg = $('#passwordVerificationMsg');\n      vMsg.css('display','inline');\n      vMsg.text('The two passwords do not match up.');\n      console.log('error');\n  }\n}\n\nexport default App;\n","C:\\Users\\Mike Heyn\\Desktop\\stagewood-test-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Mike Heyn\\Desktop\\stagewood-test-app\\client\\src\\Components\\Users\\users.js",["27"],"import React, {Component} from 'react';\r\nvar ReactDOM = require('react-dom');\r\n\r\nexport class Users extends Component {\r\n  render() {\r\n    console.log(\"STATE: \" + this.state);\r\n    if(this.state == null)\r\n    return (<div></div>)\r\n    var users = this.state.users;\r\n\r\n    console.log(\"users:\" + users);\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          users.map((item) => {\r\n            console.log(\"Item:\" + JSON.stringify(item));\r\n            return (<div className=\"mx-auto mt-3 col-xl-5 col-md-7 col-sm-10 card text-dark p-0\">\r\n                      <div className=\"card-body\">\r\n                        <h1>I'm {item.NAME}</h1>\r\n                        <p>User name: {item.USERNAME}</p>\r\n                        <p>Email: {item.EMAIL}</p>\r\n                        <p>Password: You wish!</p>\r\n                        <img src={item.IMG_LOC} class=\"img-fluid\"></img>\r\n                      </div>\r\n                    </div>)\r\n          })\r\n        }\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.arr = [1,2,3]\r\n  }\r\n\r\n  async componentDidMount() {\r\n    fetch('/getUsers')\r\n    .then(resp => resp.json())\r\n    .then(resp => {\r\n      console.log(JSON.stringify(resp))\r\n      this.setState({users: resp});\r\n    });\r\n    //users = users.json();\r\n\r\n    // console.log(\"mounted\");\r\n\r\n    // console.log(\"users didmount: \" + users);\r\n\r\n    // this.setState({ users: users})\r\n  }\r\n\r\n  \r\n}\r\n\r\nReactDOM.render(\r\n  <Users/>,\r\n  document.getElementById('root')\r\n);\r\n\r\nexport default Users;\r\n",["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"34","severity":1,"message":"38","line":66,"column":7,"nodeType":"36","messageId":"37","endLine":66,"endColumn":11},{"ruleId":"39","severity":1,"message":"40","line":71,"column":13,"nodeType":"41","messageId":"42","endLine":71,"endColumn":15},{"ruleId":"43","severity":1,"message":"44","line":24,"column":25,"nodeType":"45","endLine":24,"endColumn":67},{"ruleId":"30","replacedBy":"46"},{"ruleId":"32","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'form' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["48"],["49"],"no-global-assign","no-unsafe-negation"]